<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAFBQAAAEACAAIBgAAJgAAABQUAAABACAAuAYAAC4GAAAoAAAAFAAAACgAAAABAAgAAAAAAOAB
        AAAAAAAAAAAAAAABAAAAAAAA////AAAAAAChRwwAqFASAKlQDwCpURAArFYVAK1XFgCwXR0AslkSAK1X
        FAC3YBYAuGIZALVhHQC1Yh4AsWAeALdkIQC3ZiMAuWgkAL1tKgC3YRcAuGomAL5wLQC/cS4AwHIvAMBz
        LwDGejUAxHs5AMyISQDKeSkAx3gtAM2BMwDHfjgAzHojANqTRADZlEYA2ZVJANiVSwDYlU4A2JZOANiX
        TwDYkT8A3pZCANuWQwDalUQA5p9JANmURQDYlUkA3Z1OANqYTQDfn1AA5bN2AOWbNwDtoTsA66A8AOWd
        QADvqkwA8a1QAO2rUgDgoFAA46RSAPCwWQDwsFoA36JUAO2xYADws2IA5qxgAOivaADxyJMA76AyAPis
        PwD5sEMA+bBEAPetQwD2r0cA+bFIAPawSQD1rUgA9a5KAPi0TwD3tFAA8q9RAPa1VgD8u1oA9LNXAPW3
        XQD9v2IA87VgAO6zXwD1umUA87hmAPC2ZQDvt2cA9L1sAPW+cAD1v3MA9MF1APnEegD1wXkA98eAAPbI
        hQD6zIkA+M2PAPnRlQDzumEA/sRpAP/MeAD3xXgA9cR4APnUnAD/0oAA/9uRAP/fnAD/5agA/+myAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEHCAEBAQEBAQEBAQEBAQEBAQEBERwzGwEBAQEBAQEBAQEBAQEB
        AQEgRHJkFwEBAQEBAQEBAQEBAQEBAQEobXFsGQEBAQEBAQEBAQEBAQEBAQEmZ3BgGAEBAQEBAQEBAQEB
        AQEBAQElZm9dFgEBAQEBAQEBAQEBAQEBAQEnY25aEwEBAQEBAQEBAQEBAQEBAQEva2pXEgEBAQEBAQEB
        AQEBAQEBAQEkWWk+EAEBAQEBAQEBAQEBAQEBAQEjVVY6DQEBAQEBAQEBAQEBAQEBAQEuVFM5Hg4KBAUB
        AQEBAQEBAQEBAQEiUVBPTktNKgwHAQEBAQEBAQEBAQEsUkxKRzhDLQsBAQEBAQEBAQEBATFeSUg1HRQa
        IQYBAQEBAQEBAQEBP2FGNh8BAQ8JAgEBAQEBAQEBAQFCZUUpAQEBARUDAQEBAQEBAQEBAUBiQSsBAQEB
        AQEBAQEBAQEBAQEBAVxfNDABAQEBAQEBAQEBAQEBAQEBaFs9NzIBAQEBAQEBAQEBAQEBAQEBAVg8OwEB
        AQGf//AAD//wAAf/8ACD//AAwf/wAOD/8ADwf/AA+D/wAPwf8AD+D/AA/wBwAP+AEAD/wBAA/8AAAP/B
        gAD/w8AA/8PwAP/h8AD/4PAA//jwACgAAAAUAAAAKAAAAAEAIAAAAAAAkAYAAAAAAAAAAAAAAAAAAAAA
        AACzYB0ErVcWqrBdHfmkSg5fAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        MAA=
</value>
  </data>
</root>